import { useState } from "react";
import { useNavigate } from "react-router-dom"; // üëâ import useNavigate
import logo from "../assets/img/TheGuardian_Logo_VIE 3.png";
import googleLogo from "../assets/img/google-logo.png";
import facebookLogo from "../assets/img/facebook-logo.png";
import appleLogo from "../assets/img/appleID-logo.png";
import zaloLogo from "../assets/img/zalo-logo.png";
import fbIcon from "../assets/img/Facebook.svg";
import youtubeIcon from "../assets/img/Icon-youtube.svg";
import instaIcon from "../assets/img/Icon-insta.svg";
import qrIcon from "../assets/img/qr1-1.svg";
import ggPlayIcon from "../assets/img/testimonials/gg play.svg";
import appStoreIcon from "../assets/img/testimonials/appstore.svg";
import bgRe from "../assets/img/volcano-02.png";

import "../style/signup-in.css";

function Register() {
  const [formData, setFormData] = useState({
    fullname: "",
    dob: "",
    phone: "",
    email: "",
    username: "",
    password: "",
    confirmPassword: "",
    ageCheck: false,
  });

  const [showPassword, setShowPassword] = useState(false);
  const [showConfirm, setShowConfirm] = useState(false);

  const navigate = useNavigate(); // üëâ hook ƒë·ªÉ chuy·ªÉn trang

  const handleChange = (e) => {
    const { id, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [id]: type === "checkbox" ? checked : value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const {
      fullname,
      dob,
      phone,
      email,
      username,
      password,
      confirmPassword,
      ageCheck,
    } = formData;

    // ===== Validate FE =====
    if (
      !fullname ||
      !dob ||
      !phone ||
      !email ||
      !username ||
      !password ||
      !confirmPassword
    ) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }

    const passwordRegex =
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    if (!passwordRegex.test(password)) {
      alert(
        "M·∫≠t kh·∫©u ph·∫£i c√≥ t·ªëi thi·ªÉu 8 k√Ω t·ª±, g·ªìm ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát!"
      );
      return;
    }

    if (password !== confirmPassword) {
      alert("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!");
      return;
    }

    // check tu·ªïi >= 18
    const birthDate = new Date(dob);
    const today = new Date();
    let age = today.getFullYear() - birthDate.getFullYear();
    const monthDiff = today.getMonth() - birthDate.getMonth();
    if (
      monthDiff < 0 ||
      (monthDiff === 0 && today.getDate() < birthDate.getDate())
    ) {
      age--;
    }
    if (age < 18) {
      alert("B·∫°n ph·∫£i tr√™n 18 tu·ªïi ƒë·ªÉ ƒëƒÉng k√Ω!");
      return;
    }

    if (!ageCheck) {
      alert("B·∫°n ph·∫£i x√°c nh·∫≠n tr√™n 18 tu·ªïi!");
      return;
    }

    // ===== G·ª≠i API t·ªõi backend =====
    try {
      const response = await fetch("http://localhost:3000/api/auth/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          fullName: fullname,
          dob,
          phone,
          email,
          username,
          password,
          confirmPassword,
          isAdult: ageCheck,
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        alert(data.msg || "ƒêƒÉng k√Ω th·∫•t b·∫°i");
        return;
      }

      alert("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!");
      console.log("User:", data.user);

      // üëâ Chuy·ªÉn h∆∞·ªõng sang trang Login
      navigate("/login");

    } catch (err) {
      console.error("‚ùå L·ªói FE:", err);
      alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi server!");
    }
  };

  return (
    <section
      className="register-section"
      style={{ backgroundImage: `url(${bgRe})` }}
    >
      <div className="register-box">
        {/* Logo */}
        <div className="register-logo">
          <img src={logo} alt="Logo" />
        </div>

        {/* Tabs */}
        <div className="register-tabs">
          <button className="register-tab inactive">
            <a
              href="/Login"
              style={{ color: "#ECC689", textDecoration: "none" }}
            >
              ƒêƒÇNG NH·∫¨P
            </a>
          </button>
          <button className="register-tab active">ƒêƒÇNG K√ù</button>
        </div>

        {/* Form */}
        <form className="register-form" onSubmit={handleSubmit}>
          <div className="register-field">
            <label htmlFor="fullname">T√äN C·ª¶A B·∫†N</label>
            <input
              id="fullname"
              type="text"
              placeholder="Nh·∫≠p t√™n c·ªßa b·∫°n"
              value={formData.fullname}
              onChange={handleChange}
              required
            />
          </div>

          <div className="register-field">
            <label htmlFor="dob">NG√ÄY SINH</label>
            <input
              id="dob"
              type="date"
              value={formData.dob}
              onChange={handleChange}
              required
            />
          </div>

          <div className="register-field">
            <label htmlFor="phone">S·ªê ƒêI·ªÜN THO·∫†I</label>
            <input
              id="phone"
              type="tel"
              placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n"
              value={formData.phone}
              onChange={handleChange}
              required
            />
          </div>

          <div className="register-field">
            <label htmlFor="email">EMAIL</label>
            <input
              id="email"
              type="email"
              placeholder="Nh·∫≠p email c·ªßa b·∫°n"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>

          <div className="register-field">
            <label htmlFor="username">T√äN ƒêƒÇNG NH·∫¨P</label>
            <input
              id="username"
              type="text"
              placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p c·ªßa b·∫°n"
              value={formData.username}
              onChange={handleChange}
              required
            />
          </div>

          <div className="register-field">
            <label htmlFor="password">M·∫¨T KH·∫®U</label>
            <div className="register-password">
              <input
                id="password"
                type={showPassword ? "text" : "password"}
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u c·ªßa b·∫°n"
                value={formData.password}
                onChange={handleChange}
                required
              />
              <span
                className="register-toggle"
                onClick={() => setShowPassword(!showPassword)}
              >
                {showPassword ? "üëÅÔ∏è" : "üôà"}
              </span>
            </div>
            <p className="register-hint">
              * M·∫≠t kh·∫©u g·ªìm t·ªëi thi·ªÉu 8 k√Ω t·ª±, bao g·ªìm ch·ªØ c√°i vi·∫øt hoa, vi·∫øt
              th∆∞·ªùng, ch·ªØ s·ªë v√† k√Ω t·ª± ƒë·∫∑c bi·ªát
            </p>
          </div>

          <div className="register-field">
            <label htmlFor="confirmPassword">X√ÅC NH·∫¨N M·∫¨T KH·∫®U</label>
            <div className="register-password">
              <input
                id="confirmPassword"
                type={showConfirm ? "text" : "password"}
                placeholder="X√°c nh·∫≠n m·∫≠t kh·∫©u c·ªßa b·∫°n"
                value={formData.confirmPassword}
                onChange={handleChange}
                required
              />
              <span
                className="register-toggle"
                onClick={() => setShowConfirm(!showConfirm)}
              >
                {showConfirm ? "üëÅÔ∏è" : "üôà"}
              </span>
            </div>
          </div>

          <div className="register-check">
            <input
              id="ageCheck"
              type="checkbox"
              checked={formData.ageCheck}
              onChange={handleChange}
              required
            />
            <label
              htmlFor="ageCheck"
              style={{
                fontFamily: "'Times New Roman', Times, serif",
                color: "#ECC689",
                fontSize: "14px",
              }}
            >
              X√ÅC NH·∫¨N NG∆Ø·ªúI D√ôNG TR√äN 18 TU·ªîI
            </label>
          </div>

          <button type="submit" className="register-submit">
            ƒêƒÇNG K√ù
          </button>
        </form>

        {/* Social Register */}
        <div className="register-social">
          <p className="register-social-title" >ƒêƒÇNG K√ù B·∫∞NG</p>
          <div className="register-social-icons">
            <img src={googleLogo} alt="Google" /> 
            <img src={facebookLogo} alt="Facebook" />
            <img src={appleLogo} alt="Apple" />
            <img src={zaloLogo} alt="Zalo" />
          </div>
        </div>
      </div>

      {/* Apps */}
      <div className="register-apps">
        <a href="">
          <img src={fbIcon} alt="Facebook" />
        </a>
        <a href="">
          <img src={youtubeIcon} alt="YouTube" />
        </a>
        <a href="">
          <img src={instaIcon} alt="Instagram" />
        </a>
        <a href="">
          <img src={qrIcon} alt="QR" />
        </a>
        <a href="#">
          <img src={ggPlayIcon} alt="Google Play" />
        </a>
        <a href="">
          <img src={qrIcon} alt="QR" />
        </a>
        <a href="#">
          <img src={appStoreIcon} alt="App Store" />
        </a>
      </div>
    </section>
  );
}

export default Register;
